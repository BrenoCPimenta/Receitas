name: Django CI

on:
  pull_request:
    branches: [ main, 'story-**' ]

jobs:
  backend-quality:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.9]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Dependencies
      working-directory: ./backend
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Run Tests
      working-directory: ./backend/api
      run: |
        python manage.py test
  
  frontend-quality:
    needs: [backend-quality]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x]
    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
    - name: Update dependencies
      working-directory: ./frontend
      run: npm ci
    - name: Run frontend linter
      working-directory: ./frontend
      run: npm run lint:no-fix
  
  frontend-deploy:
    needs: [frontend-quality]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x]
    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
    - run: git config --global user.email "actions@github.com"
    - run: git config --global user.name "Github Actions"
    - name: Update dependencies
      working-directory: ./frontend
      run: npm i
    - name: Build frontend
      working-directory: ./frontend
      run: npm run build
    - name: Deploy frontend
      working-directory: ./frontend
      run: npm run deploy

  visual-regression-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x]
    container: cypress/included:8.0.0
    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
    - name: Update dependencies
      working-directory: ./frontend
      run: npm ci
    - uses: actions/checkout@v2
    - name: Run visual rests
      working-directory: ./frontend
      run: cypress run --config baseUrl=https://brenocpimenta.github.io/Receitas/
