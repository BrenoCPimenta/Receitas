{"version":3,"sources":["webpack:///../../../src/components/VGrid/VRow.ts","webpack:///../../../src/mixins/delayable/index.ts","webpack:///../../../src/mixins/activatable/index.ts","webpack:///../../../src/components/VGrid/VCol.ts","webpack:///../../../src/mixins/bootable/index.ts","webpack:///../../../src/components/VGrid/grid.ts","webpack:///../../../src/components/VGrid/VContainer.ts","webpack:///../../../src/mixins/dependent/index.ts","webpack:///../../../src/components/VDivider/VDivider.ts","webpack:///../../../src/mixins/stackable/index.ts","webpack:///../../../src/mixins/detachable/index.ts","webpack:///../../../src/mixins/menuable/index.ts"],"names":["breakpoints","ALIGNMENT","makeProps","props","val","prefix","def","alignValidator","str","alignProps","type","default","validator","justifyValidator","justifyProps","alignContentValidator","alignContentProps","propMap","align","Object","justify","alignContent","classMap","breakpointClass","className","breakpoint","prop","cache","name","functional","tag","dense","noGutters","children","cacheKey","String","classList","value","h","data","staticClass","class","openDelay","Number","closeDelay","openTimeout","closeTimeout","undefined","methods","clearTimeout","this","delay","parseInt","setTimeout","cb","open","close","baseMixins","activator","includes","disabled","internalActivator","openOnHover","openOnFocus","Boolean","activatorElement","activatorNode","events","listeners","watch","slotType","keys","node","on","attrs","genActivatorAttributes","role","e","getActivator","target","length","vm","m","Node","self","breakpointProps","offsetProps","orderProps","col","offset","order","cols","alignSelf","parent","hasColClasses","eager","isBooted","computed","hasContent","content","id","classes","key","fluid","mergeData","Array","searchChildren","results","index","child","closeDependents","isActive","isDependent","openDependents","result","$refs","overlay","inset","vertical","$attrs","orientation","themeClasses","$listeners","stackElement","stackExclude","stackMinZIndex","window","getMaxZIndex","exclude","base","zis","activeElements","document","Math","validateAttachTarget","removeActivator","mixins","attach","contentClass","hasDetached","$el","parentNode","observer","MutationObserver","list","record","observe","subtree","childList","scopeId","_isDestroyed","console","positionable","allowOverflow","light","dark","maxWidth","minWidth","nudgeBottom","nudgeLeft","nudgeRight","nudgeTop","nudgeWidth","offsetOverflow","openOnClick","positionX","positionY","zIndex","absoluteX","absoluteY","activatedBy","activatorFixed","dimensions","top","left","bottom","right","width","height","offsetTop","scrollHeight","offsetLeft","relativeYOffset","hasJustFocused","hasWindow","inputActivator","isContentActive","pageWidth","pageYOffset","stackClass","a","c","activatorLeft","isNaN","$slots","$scopedSlots","calcXOverflow","calcYOverflow","xOverflow","documentHeight","toTop","absoluteYOffset","contentHeight","totalHeight","isOverflowing","el","onClick","rect","getRoundedBoundedClientRect","style","requestAnimationFrame","Promise","resolve","measure","offsetRect"],"mappings":"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","file":"js/chunk-6acccf26.91cdd915.js","sourcesContent":["import './VGrid.sass'\n\nimport Vue, { PropOptions } from 'vue'\nimport mergeData from '../../util/mergeData'\nimport { upperFirst } from '../../util/helpers'\n\n// no xs\nconst breakpoints = ['sm', 'md', 'lg', 'xl']\n\nconst ALIGNMENT = ['start', 'end', 'center']\n\nfunction makeProps (prefix: string, def: () => PropOptions) {\n  return breakpoints.reduce((props, val) => {\n    props[prefix + upperFirst(val)] = def()\n    return props\n  }, {} as Dictionary<PropOptions>)\n}\n\nconst alignValidator = (str: any) => [...ALIGNMENT, 'baseline', 'stretch'].includes(str)\nconst alignProps = makeProps('align', () => ({\n  type: String,\n  default: null,\n  validator: alignValidator,\n}))\n\nconst justifyValidator = (str: any) => [...ALIGNMENT, 'space-between', 'space-around'].includes(str)\nconst justifyProps = makeProps('justify', () => ({\n  type: String,\n  default: null,\n  validator: justifyValidator,\n}))\n\nconst alignContentValidator = (str: any) => [...ALIGNMENT, 'space-between', 'space-around', 'stretch'].includes(str)\nconst alignContentProps = makeProps('alignContent', () => ({\n  type: String,\n  default: null,\n  validator: alignContentValidator,\n}))\n\nconst propMap = {\n  align: Object.keys(alignProps),\n  justify: Object.keys(justifyProps),\n  alignContent: Object.keys(alignContentProps),\n}\n\nconst classMap = {\n  align: 'align',\n  justify: 'justify',\n  alignContent: 'align-content',\n}\n\nfunction breakpointClass (type: keyof typeof propMap, prop: string, val: string) {\n  let className = classMap[type]\n  if (val == null) {\n    return undefined\n  }\n  if (prop) {\n    // alignSm -> Sm\n    const breakpoint = prop.replace(type, '')\n    className += `-${breakpoint}`\n  }\n  // .align-items-sm-center\n  className += `-${val}`\n  return className.toLowerCase()\n}\n\nconst cache = new Map<string, any[]>()\n\nexport default Vue.extend({\n  name: 'v-row',\n  functional: true,\n  props: {\n    tag: {\n      type: String,\n      default: 'div',\n    },\n    dense: Boolean,\n    noGutters: Boolean,\n    align: {\n      type: String,\n      default: null,\n      validator: alignValidator,\n    },\n    ...alignProps,\n    justify: {\n      type: String,\n      default: null,\n      validator: justifyValidator,\n    },\n    ...justifyProps,\n    alignContent: {\n      type: String,\n      default: null,\n      validator: alignContentValidator,\n    },\n    ...alignContentProps,\n  },\n  render (h, { props, data, children }) {\n    // Super-fast memoization based on props, 5x faster than JSON.stringify\n    let cacheKey = ''\n    for (const prop in props) {\n      cacheKey += String((props as any)[prop])\n    }\n    let classList = cache.get(cacheKey)\n\n    if (!classList) {\n      classList = []\n      // Loop through `align`, `justify`, `alignContent` breakpoint props\n      let type: keyof typeof propMap\n      for (type in propMap) {\n        propMap[type].forEach(prop => {\n          const value: string = (props as any)[prop]\n          const className = breakpointClass(type, prop, value)\n          if (className) classList!.push(className)\n        })\n      }\n\n      classList.push({\n        'no-gutters': props.noGutters,\n        'row--dense': props.dense,\n        [`align-${props.align}`]: props.align,\n        [`justify-${props.justify}`]: props.justify,\n        [`align-content-${props.alignContent}`]: props.alignContent,\n      })\n\n      cache.set(cacheKey, classList)\n    }\n\n    return h(\n      props.tag,\n      mergeData(data, {\n        staticClass: 'row',\n        class: classList,\n      }),\n      children\n    )\n  },\n})\n","import Vue from 'vue'\n\n/**\n * Delayable\n *\n * @mixin\n *\n * Changes the open or close delay time for elements\n */\nexport default Vue.extend<Vue & { isActive?: boolean }>().extend({\n  name: 'delayable',\n\n  props: {\n    openDelay: {\n      type: [Number, String],\n      default: 0,\n    },\n    closeDelay: {\n      type: [Number, String],\n      default: 0,\n    },\n  },\n\n  data: () => ({\n    openTimeout: undefined as number | undefined,\n    closeTimeout: undefined as number | undefined,\n  }),\n\n  methods: {\n    /**\n     * Clear any pending delay timers from executing\n     */\n    clearDelay (): void {\n      clearTimeout(this.openTimeout)\n      clearTimeout(this.closeTimeout)\n    },\n    /**\n     * Runs callback after a specified delay\n     */\n    runDelay (type: 'open' | 'close', cb?: () => void): void {\n      this.clearDelay()\n\n      const delay = parseInt((this as any)[`${type}Delay`], 10)\n\n      ;(this as any)[`${type}Timeout`] = setTimeout(cb || (() => {\n        this.isActive = { open: true, close: false }[type]\n      }), delay)\n    },\n  },\n})\n","// Mixins\nimport Delayable from '../delayable'\nimport Toggleable from '../toggleable'\n\n// Utilities\nimport mixins from '../../util/mixins'\nimport { getSlot, getSlotType } from '../../util/helpers'\nimport { consoleError } from '../../util/console'\n\n// Types\nimport { VNode, PropType } from 'vue'\n\ntype Listeners = Dictionary<(e: MouseEvent & KeyboardEvent & FocusEvent) => void>\n\nconst baseMixins = mixins(\n  Delayable,\n  Toggleable\n)\n\n/* @vue/component */\nexport default baseMixins.extend({\n  name: 'activatable',\n\n  props: {\n    activator: {\n      default: null as unknown as PropType<string | HTMLElement | VNode | Element | null>,\n      validator: (val: string | object) => {\n        return ['string', 'object'].includes(typeof val)\n      },\n    },\n    disabled: Boolean,\n    internalActivator: Boolean,\n    openOnHover: Boolean,\n    openOnFocus: Boolean,\n  },\n\n  data: () => ({\n    // Do not use this directly, call getActivator() instead\n    activatorElement: null as HTMLElement | null,\n    activatorNode: [] as VNode[],\n    events: ['click', 'mouseenter', 'mouseleave', 'focus'],\n    listeners: {} as Listeners,\n  }),\n\n  watch: {\n    activator: 'resetActivator',\n    openOnFocus: 'resetActivator',\n    openOnHover: 'resetActivator',\n  },\n\n  mounted () {\n    const slotType = getSlotType(this, 'activator', true)\n\n    if (slotType && ['v-slot', 'normal'].includes(slotType)) {\n      consoleError(`The activator slot must be bound, try '<template v-slot:activator=\"{ on }\"><v-btn v-on=\"on\">'`, this)\n    }\n\n    this.addActivatorEvents()\n  },\n\n  beforeDestroy () {\n    this.removeActivatorEvents()\n  },\n\n  methods: {\n    addActivatorEvents () {\n      if (\n        !this.activator ||\n        this.disabled ||\n        !this.getActivator()\n      ) return\n\n      this.listeners = this.genActivatorListeners()\n      const keys = Object.keys(this.listeners)\n\n      for (const key of keys) {\n        this.getActivator()!.addEventListener(key, this.listeners[key] as any)\n      }\n    },\n    genActivator () {\n      const node = getSlot(this, 'activator', Object.assign(this.getValueProxy(), {\n        on: this.genActivatorListeners(),\n        attrs: this.genActivatorAttributes(),\n      })) || []\n\n      this.activatorNode = node\n\n      return node\n    },\n    genActivatorAttributes () {\n      return {\n        role: 'button',\n        'aria-haspopup': true,\n        'aria-expanded': String(this.isActive),\n      }\n    },\n    genActivatorListeners () {\n      if (this.disabled) return {}\n\n      const listeners: Listeners = {}\n\n      if (this.openOnHover) {\n        listeners.mouseenter = (e: MouseEvent) => {\n          this.getActivator(e)\n          this.runDelay('open')\n        }\n        listeners.mouseleave = (e: MouseEvent) => {\n          this.getActivator(e)\n          this.runDelay('close')\n        }\n      } else {\n        listeners.click = (e: MouseEvent) => {\n          const activator = this.getActivator(e)\n          if (activator) activator.focus()\n\n          e.stopPropagation()\n\n          this.isActive = !this.isActive\n        }\n      }\n\n      if (this.openOnFocus) {\n        listeners.focus = (e: FocusEvent) => {\n          this.getActivator(e)\n\n          e.stopPropagation()\n\n          this.isActive = !this.isActive\n        }\n      }\n\n      return listeners\n    },\n    getActivator (e?: Event): HTMLElement | null {\n      // If we've already fetched the activator, re-use\n      if (this.activatorElement) return this.activatorElement\n\n      let activator = null\n\n      if (this.activator) {\n        const target = this.internalActivator ? this.$el : document\n\n        if (typeof this.activator === 'string') {\n          // Selector\n          activator = target.querySelector(this.activator)\n        } else if ((this.activator as any).$el) {\n          // Component (ref)\n          activator = (this.activator as any).$el\n        } else {\n          // HTMLElement | Element\n          activator = this.activator\n        }\n      } else if (this.activatorNode.length === 1 || (this.activatorNode.length && !e)) {\n        // Use the contents of the activator slot\n        // There's either only one element in it or we\n        // don't have a click event to use as a last resort\n        const vm = this.activatorNode[0].componentInstance\n        if (\n          vm &&\n          vm.$options.mixins && //                         Activatable is indirectly used via Menuable\n          vm.$options.mixins.some((m: any) => m.options && ['activatable', 'menuable'].includes(m.options.name))\n        ) {\n          // Activator is actually another activatible component, use its activator (#8846)\n          activator = (vm as any).getActivator()\n        } else {\n          activator = this.activatorNode[0].elm as HTMLElement\n        }\n      } else if (e) {\n        // Activated by a click or focus event\n        activator = (e.currentTarget || e.target) as HTMLElement\n      }\n\n      // The activator should only be a valid element (Ignore comments and text nodes)\n      this.activatorElement = activator?.nodeType === Node.ELEMENT_NODE ? activator : null\n\n      return this.activatorElement\n    },\n    getContentSlot () {\n      return getSlot(this, 'default', this.getValueProxy(), true)\n    },\n    getValueProxy (): object {\n      const self = this\n      return {\n        get value () {\n          return self.isActive\n        },\n        set value (isActive: boolean) {\n          self.isActive = isActive\n        },\n      }\n    },\n    removeActivatorEvents () {\n      if (\n        !this.activator ||\n        !this.activatorElement\n      ) return\n\n      const keys = Object.keys(this.listeners)\n\n      for (const key of keys) {\n        (this.activatorElement as any).removeEventListener(key, this.listeners[key])\n      }\n\n      this.listeners = {}\n    },\n    resetActivator () {\n      this.removeActivatorEvents()\n      this.activatorElement = null\n      this.getActivator()\n      this.addActivatorEvents()\n    },\n  },\n})\n","import './VGrid.sass'\n\nimport Vue, { VNode, PropOptions } from 'vue'\nimport mergeData from '../../util/mergeData'\nimport { upperFirst } from '../../util/helpers'\n\n// no xs\nconst breakpoints = ['sm', 'md', 'lg', 'xl']\n\nconst breakpointProps = (() => {\n  return breakpoints.reduce((props, val) => {\n    props[val] = {\n      type: [Boolean, String, Number],\n      default: false,\n    }\n    return props\n  }, {} as Dictionary<PropOptions>)\n})()\n\nconst offsetProps = (() => {\n  return breakpoints.reduce((props, val) => {\n    props['offset' + upperFirst(val)] = {\n      type: [String, Number],\n      default: null,\n    }\n    return props\n  }, {} as Dictionary<PropOptions>)\n})()\n\nconst orderProps = (() => {\n  return breakpoints.reduce((props, val) => {\n    props['order' + upperFirst(val)] = {\n      type: [String, Number],\n      default: null,\n    }\n    return props\n  }, {} as Dictionary<PropOptions>)\n})()\n\nconst propMap = {\n  col: Object.keys(breakpointProps),\n  offset: Object.keys(offsetProps),\n  order: Object.keys(orderProps),\n}\n\nfunction breakpointClass (type: keyof typeof propMap, prop: string, val: boolean | string | number) {\n  let className = type\n  if (val == null || val === false) {\n    return undefined\n  }\n  if (prop) {\n    const breakpoint = prop.replace(type, '')\n    className += `-${breakpoint}`\n  }\n  // Handling the boolean style prop when accepting [Boolean, String, Number]\n  // means Vue will not convert <v-col sm></v-col> to sm: true for us.\n  // Since the default is false, an empty string indicates the prop's presence.\n  if (type === 'col' && (val === '' || val === true)) {\n    // .col-md\n    return className.toLowerCase()\n  }\n  // .order-md-6\n  className += `-${val}`\n  return className.toLowerCase()\n}\n\nconst cache = new Map<string, any[]>()\n\nexport default Vue.extend({\n  name: 'v-col',\n  functional: true,\n  props: {\n    cols: {\n      type: [Boolean, String, Number],\n      default: false,\n    },\n    ...breakpointProps,\n    offset: {\n      type: [String, Number],\n      default: null,\n    },\n    ...offsetProps,\n    order: {\n      type: [String, Number],\n      default: null,\n    },\n    ...orderProps,\n    alignSelf: {\n      type: String,\n      default: null,\n      validator: (str: any) => ['auto', 'start', 'end', 'center', 'baseline', 'stretch'].includes(str),\n    },\n    tag: {\n      type: String,\n      default: 'div',\n    },\n  },\n  render (h, { props, data, children, parent }): VNode {\n    // Super-fast memoization based on props, 5x faster than JSON.stringify\n    let cacheKey = ''\n    for (const prop in props) {\n      cacheKey += String((props as any)[prop])\n    }\n    let classList = cache.get(cacheKey)\n\n    if (!classList) {\n      classList = []\n      // Loop through `col`, `offset`, `order` breakpoint props\n      let type: keyof typeof propMap\n      for (type in propMap) {\n        propMap[type].forEach(prop => {\n          const value: string | number | boolean = (props as any)[prop]\n          const className = breakpointClass(type, prop, value)\n          if (className) classList!.push(className)\n        })\n      }\n\n      const hasColClasses = classList.some(className => className.startsWith('col-'))\n\n      classList.push({\n        // Default to .col if no other col-{bp}-* classes generated nor `cols` specified.\n        col: !hasColClasses || !props.cols,\n        [`col-${props.cols}`]: props.cols,\n        [`offset-${props.offset}`]: props.offset,\n        [`order-${props.order}`]: props.order,\n        [`align-self-${props.alignSelf}`]: props.alignSelf,\n      })\n\n      cache.set(cacheKey, classList)\n    }\n\n    return h(props.tag, mergeData(data, { class: classList }), children)\n  },\n})\n","// Utilities\nimport { removed } from '../../util/console'\n\n// Types\nimport Vue, { VNode } from 'vue'\ninterface Toggleable extends Vue {\n  isActive?: boolean\n}\n\n/**\n * Bootable\n * @mixin\n *\n * Used to add lazy content functionality to components\n * Looks for change in \"isActive\" to automatically boot\n * Otherwise can be set manually\n */\n/* @vue/component */\nexport default Vue.extend<Vue & Toggleable>().extend({\n  name: 'bootable',\n\n  props: {\n    eager: Boolean,\n  },\n\n  data: () => ({\n    isBooted: false,\n  }),\n\n  computed: {\n    hasContent (): boolean | undefined {\n      return this.isBooted || this.eager || this.isActive\n    },\n  },\n\n  watch: {\n    isActive () {\n      this.isBooted = true\n    },\n  },\n\n  created () {\n    /* istanbul ignore next */\n    if ('lazy' in this.$attrs) {\n      removed('lazy', this)\n    }\n  },\n\n  methods: {\n    showLazyContent (content?: () => VNode[]): VNode[] {\n      return (this.hasContent && content) ? content() : [this.$createElement()]\n    },\n  },\n})\n","// Types\nimport Vue, { VNode } from 'vue'\n\nexport default function VGrid (name: string) {\n  /* @vue/component */\n  return Vue.extend({\n    name: `v-${name}`,\n\n    functional: true,\n\n    props: {\n      id: String,\n      tag: {\n        type: String,\n        default: 'div',\n      },\n    },\n\n    render (h, { props, data, children }): VNode {\n      data.staticClass = (`${name} ${data.staticClass || ''}`).trim()\n\n      const { attrs } = data\n      if (attrs) {\n        // reset attrs to extract utility clases like pa-3\n        data.attrs = {}\n        const classes = Object.keys(attrs).filter(key => {\n          // TODO: Remove once resolved\n          // https://github.com/vuejs/vue/issues/7841\n          if (key === 'slot') return false\n\n          const value = attrs[key]\n\n          // add back data attributes like data-test=\"foo\" but do not\n          // add them as classes\n          if (key.startsWith('data-')) {\n            data.attrs![key] = value\n            return false\n          }\n\n          return value || typeof value === 'string'\n        })\n\n        if (classes.length) data.staticClass += ` ${classes.join(' ')}`\n      }\n\n      if (props.id) {\n        data.domProps = data.domProps || {}\n        data.domProps.id = props.id\n      }\n\n      return h(props.tag, data, children)\n    },\n  })\n}\n","import './_grid.sass'\nimport './VGrid.sass'\n\nimport Grid from './grid'\n\nimport mergeData from '../../util/mergeData'\n\n/* @vue/component */\nexport default Grid('container').extend({\n  name: 'v-container',\n  functional: true,\n  props: {\n    id: String,\n    tag: {\n      type: String,\n      default: 'div',\n    },\n    fluid: {\n      type: Boolean,\n      default: false,\n    },\n  },\n  render (h, { props, data, children }) {\n    let classes\n    const { attrs } = data\n    if (attrs) {\n      // reset attrs to extract utility clases like pa-3\n      data.attrs = {}\n      classes = Object.keys(attrs).filter(key => {\n        // TODO: Remove once resolved\n        // https://github.com/vuejs/vue/issues/7841\n        if (key === 'slot') return false\n\n        const value = attrs[key]\n\n        // add back data attributes like data-test=\"foo\" but do not\n        // add them as classes\n        if (key.startsWith('data-')) {\n          data.attrs![key] = value\n          return false\n        }\n\n        return value || typeof value === 'string'\n      })\n    }\n\n    if (props.id) {\n      data.domProps = data.domProps || {}\n      data.domProps.id = props.id\n    }\n\n    return h(\n      props.tag,\n      mergeData(data, {\n        staticClass: 'container',\n        class: Array<any>({\n          'container--fluid': props.fluid,\n        }).concat(classes || []),\n      }),\n      children\n    )\n  },\n})\n","import Vue from 'vue'\n\nimport mixins from '../../util/mixins'\nimport { VOverlay } from '../../components/VOverlay'\n\ninterface options extends Vue {\n  $el: HTMLElement\n  $refs: {\n    content: HTMLElement\n  }\n  overlay?: InstanceType<typeof VOverlay>\n}\n\ninterface DependentInstance extends Vue {\n  isActive?: boolean\n  isDependent?: boolean\n}\n\nfunction searchChildren (children: Vue[]): DependentInstance[] {\n  const results = []\n  for (let index = 0; index < children.length; index++) {\n    const child = children[index] as DependentInstance\n    if (child.isActive && child.isDependent) {\n      results.push(child)\n    } else {\n      results.push(...searchChildren(child.$children))\n    }\n  }\n\n  return results\n}\n\n/* @vue/component */\nexport default mixins<options>().extend({\n  name: 'dependent',\n\n  data () {\n    return {\n      closeDependents: true,\n      isActive: false,\n      isDependent: true,\n    }\n  },\n\n  watch: {\n    isActive (val) {\n      if (val) return\n\n      const openDependents = this.getOpenDependents()\n      for (let index = 0; index < openDependents.length; index++) {\n        openDependents[index].isActive = false\n      }\n    },\n  },\n\n  methods: {\n    getOpenDependents (): any[] {\n      if (this.closeDependents) return searchChildren(this.$children)\n\n      return []\n    },\n    getOpenDependentElements (): HTMLElement[] {\n      const result = []\n      const openDependents = this.getOpenDependents()\n\n      for (let index = 0; index < openDependents.length; index++) {\n        result.push(...openDependents[index].getClickableDependentElements())\n      }\n\n      return result\n    },\n    getClickableDependentElements (): HTMLElement[] {\n      const result = [this.$el]\n      if (this.$refs.content) result.push(this.$refs.content)\n      if (this.overlay) result.push(this.overlay.$el as HTMLElement)\n      result.push(...this.getOpenDependentElements())\n\n      return result\n    },\n  },\n})\n","// Styles\nimport './VDivider.sass'\n\n// Types\nimport { VNode } from 'vue'\n\n// Mixins\nimport Themeable from '../../mixins/themeable'\n\nexport default Themeable.extend({\n  name: 'v-divider',\n\n  props: {\n    inset: Boolean,\n    vertical: Boolean,\n  },\n\n  render (h): VNode {\n    // WAI-ARIA attributes\n    let orientation\n    if (!this.$attrs.role || this.$attrs.role === 'separator') {\n      orientation = this.vertical ? 'vertical' : 'horizontal'\n    }\n    return h('hr', {\n      class: {\n        'v-divider': true,\n        'v-divider--inset': this.inset,\n        'v-divider--vertical': this.vertical,\n        ...this.themeClasses,\n      },\n      attrs: {\n        role: 'separator',\n        'aria-orientation': orientation,\n        ...this.$attrs,\n      },\n      on: this.$listeners,\n    })\n  },\n})\n","import Vue from 'vue'\n\nimport { getZIndex } from '../../util/helpers'\n\ninterface options extends Vue {\n  $refs: {\n    content: Element\n  }\n}\n\n/* @vue/component */\nexport default Vue.extend<options>().extend({\n  name: 'stackable',\n\n  data () {\n    return {\n      stackElement: null as Element | null,\n      stackExclude: null as Element[] | null,\n      stackMinZIndex: 0,\n      isActive: false,\n    }\n  },\n  computed: {\n    activeZIndex (): number {\n      if (typeof window === 'undefined') return 0\n\n      const content = this.stackElement || this.$refs.content\n      // Return current zindex if not active\n\n      const index = !this.isActive\n        ? getZIndex(content)\n        : this.getMaxZIndex(this.stackExclude || [content]) + 2\n\n      if (index == null) return index\n\n      // Return max current z-index (excluding self) + 2\n      // (2 to leave room for an overlay below, if needed)\n      return parseInt(index)\n    },\n  },\n  methods: {\n    getMaxZIndex (exclude: Element[] = []) {\n      const base = this.$el\n      // Start with lowest allowed z-index or z-index of\n      // base component's element, whichever is greater\n      const zis = [this.stackMinZIndex, getZIndex(base)]\n      // Convert the NodeList to an array to\n      // prevent an Edge bug with Symbol.iterator\n      // https://github.com/vuetifyjs/vuetify/issues/2146\n      const activeElements = [\n        ...document.getElementsByClassName('v-menu__content--active'),\n        ...document.getElementsByClassName('v-dialog__content--active'),\n      ]\n\n      // Get z-index for all active dialogs\n      for (let index = 0; index < activeElements.length; index++) {\n        if (!exclude.includes(activeElements[index])) {\n          zis.push(getZIndex(activeElements[index]))\n        }\n      }\n\n      return Math.max(...zis)\n    },\n  },\n})\n","// Mixins\nimport Bootable from '../bootable'\n\n// Utilities\nimport { getObjectValueByPath } from '../../util/helpers'\nimport mixins, { ExtractVue } from '../../util/mixins'\nimport { consoleWarn } from '../../util/console'\n\n// Types\nimport Vue, { PropOptions } from 'vue'\nimport { VNode } from 'vue/types'\n\ninterface options extends Vue {\n  $el: HTMLElement\n  $refs: {\n    content: HTMLElement\n  }\n}\n\nfunction validateAttachTarget (val: any) {\n  const type = typeof val\n\n  if (type === 'boolean' || type === 'string') return true\n\n  return val.nodeType === Node.ELEMENT_NODE\n}\n\nfunction removeActivator (activator: VNode[]) {\n  activator.forEach(node => {\n    node.elm &&\n    node.elm.parentNode &&\n    node.elm.parentNode.removeChild(node.elm)\n  })\n}\n\n/* @vue/component */\nexport default mixins<options &\n  /* eslint-disable indent */\n  ExtractVue<typeof Bootable>\n  /* eslint-enable indent */\n>(Bootable).extend({\n  name: 'detachable',\n\n  props: {\n    attach: {\n      default: false,\n      validator: validateAttachTarget,\n    } as PropOptions<boolean | string | Element>,\n    contentClass: {\n      type: String,\n      default: '',\n    },\n  },\n\n  data: () => ({\n    activatorNode: null as null | VNode | VNode[],\n    hasDetached: false,\n  }),\n\n  watch: {\n    attach () {\n      this.hasDetached = false\n      this.initDetach()\n    },\n    hasContent () {\n      this.$nextTick(this.initDetach)\n    },\n  },\n\n  beforeMount () {\n    this.$nextTick(() => {\n      if (this.activatorNode) {\n        const activator = Array.isArray(this.activatorNode) ? this.activatorNode : [this.activatorNode]\n\n        activator.forEach(node => {\n          if (!node.elm) return\n          if (!this.$el.parentNode) return\n\n          const target = this.$el === this.$el.parentNode.firstChild\n            ? this.$el\n            : this.$el.nextSibling\n\n          this.$el.parentNode.insertBefore(node.elm, target)\n        })\n      }\n    })\n  },\n\n  mounted () {\n    this.hasContent && this.initDetach()\n  },\n\n  deactivated () {\n    this.isActive = false\n  },\n\n  beforeDestroy () {\n    if (\n      this.$refs.content &&\n      this.$refs.content.parentNode\n    ) {\n      this.$refs.content.parentNode.removeChild(this.$refs.content)\n    }\n  },\n\n  destroyed () {\n    if (this.activatorNode) {\n      const activator = Array.isArray(this.activatorNode) ? this.activatorNode : [this.activatorNode]\n      if (this.$el.isConnected) {\n        // Component has been destroyed but the element still exists, we must be in a transition\n        // Wait for the transition to finish before cleaning up the detached activator\n        const observer = new MutationObserver(list => {\n          if (\n            list.some(record => Array.from(record.removedNodes).includes(this.$el))\n          ) {\n            observer.disconnect()\n            removeActivator(activator)\n          }\n        })\n        observer.observe(this.$el.parentNode!, { subtree: false, childList: true })\n      } else {\n        removeActivator(activator)\n      }\n    }\n  },\n\n  methods: {\n    getScopeIdAttrs () {\n      const scopeId = getObjectValueByPath(this.$vnode, 'context.$options._scopeId')\n\n      return scopeId && {\n        [scopeId]: '',\n      }\n    },\n    initDetach () {\n      if (this._isDestroyed ||\n        !this.$refs.content ||\n        this.hasDetached ||\n        // Leave menu in place if attached\n        // and dev has not changed target\n        this.attach === '' || // If used as a boolean prop (<v-menu attach>)\n        this.attach === true || // If bound to a boolean (<v-menu :attach=\"true\">)\n        this.attach === 'attach' // If bound as boolean prop in pug (v-menu(attach))\n      ) return\n\n      let target\n      if (this.attach === false) {\n        // Default, detach to app\n        target = document.querySelector('[data-app]')\n      } else if (typeof this.attach === 'string') {\n        // CSS selector\n        target = document.querySelector(this.attach)\n      } else {\n        // DOM Element\n        target = this.attach\n      }\n\n      if (!target) {\n        consoleWarn(`Unable to locate target ${this.attach || '[data-app]'}`, this)\n        return\n      }\n\n      target.appendChild(this.$refs.content)\n\n      this.hasDetached = true\n    },\n  },\n})\n","// Mixins\nimport Stackable from '../stackable'\nimport { factory as positionableFactory } from '../positionable'\nimport Activatable from '../activatable'\nimport Detachable from '../detachable'\n\n// Utilities\nimport mixins, { ExtractVue } from '../../util/mixins'\nimport { convertToUnit } from '../../util/helpers'\n\n// Types\nimport { VNode } from 'vue'\n\nconst baseMixins = mixins(\n  Stackable,\n  positionableFactory(['top', 'right', 'bottom', 'left', 'absolute']),\n  Activatable,\n  Detachable,\n)\n\ninterface dimensions {\n  top: number\n  left: number\n  bottom: number\n  right: number\n  width: number\n  height: number\n  offsetTop: number\n  scrollHeight: number\n  offsetLeft: number\n}\n\ninterface options extends ExtractVue<typeof baseMixins> {\n  attach: boolean | string | Element\n  offsetY: boolean\n  offsetX: boolean\n  dimensions: {\n    activator: dimensions\n    content: dimensions\n  }\n  $refs: {\n    content: HTMLElement\n    activator: HTMLElement\n  }\n}\n\n/* @vue/component */\nexport default baseMixins.extend<options>().extend({\n  name: 'menuable',\n\n  props: {\n    allowOverflow: Boolean,\n    light: Boolean,\n    dark: Boolean,\n    maxWidth: {\n      type: [Number, String],\n      default: 'auto',\n    },\n    minWidth: [Number, String],\n    nudgeBottom: {\n      type: [Number, String],\n      default: 0,\n    },\n    nudgeLeft: {\n      type: [Number, String],\n      default: 0,\n    },\n    nudgeRight: {\n      type: [Number, String],\n      default: 0,\n    },\n    nudgeTop: {\n      type: [Number, String],\n      default: 0,\n    },\n    nudgeWidth: {\n      type: [Number, String],\n      default: 0,\n    },\n    offsetOverflow: Boolean,\n    openOnClick: Boolean,\n    positionX: {\n      type: Number,\n      default: null,\n    },\n    positionY: {\n      type: Number,\n      default: null,\n    },\n    zIndex: {\n      type: [Number, String],\n      default: null,\n    },\n  },\n\n  data: () => ({\n    activatorNode: [] as VNode[],\n    absoluteX: 0,\n    absoluteY: 0,\n    activatedBy: null as EventTarget | null,\n    activatorFixed: false,\n    dimensions: {\n      activator: {\n        top: 0,\n        left: 0,\n        bottom: 0,\n        right: 0,\n        width: 0,\n        height: 0,\n        offsetTop: 0,\n        scrollHeight: 0,\n        offsetLeft: 0,\n      },\n      content: {\n        top: 0,\n        left: 0,\n        bottom: 0,\n        right: 0,\n        width: 0,\n        height: 0,\n        offsetTop: 0,\n        scrollHeight: 0,\n      },\n    },\n    relativeYOffset: 0,\n    hasJustFocused: false,\n    hasWindow: false,\n    inputActivator: false,\n    isContentActive: false,\n    pageWidth: 0,\n    pageYOffset: 0,\n    stackClass: 'v-menu__content--active',\n    stackMinZIndex: 6,\n  }),\n\n  computed: {\n    computedLeft () {\n      const a = this.dimensions.activator\n      const c = this.dimensions.content\n      const activatorLeft = (this.attach !== false ? a.offsetLeft : a.left) || 0\n      const minWidth = Math.max(a.width, c.width)\n      let left = 0\n      left += this.left ? activatorLeft - (minWidth - a.width) : activatorLeft\n      if (this.offsetX) {\n        const maxWidth = isNaN(Number(this.maxWidth))\n          ? a.width\n          : Math.min(a.width, Number(this.maxWidth))\n\n        left += this.left ? -maxWidth : a.width\n      }\n      if (this.nudgeLeft) left -= parseInt(this.nudgeLeft)\n      if (this.nudgeRight) left += parseInt(this.nudgeRight)\n\n      return left\n    },\n    computedTop () {\n      const a = this.dimensions.activator\n      const c = this.dimensions.content\n      let top = 0\n\n      if (this.top) top += a.height - c.height\n      if (this.attach !== false) top += a.offsetTop\n      else top += a.top + this.pageYOffset\n      if (this.offsetY) top += this.top ? -a.height : a.height\n      if (this.nudgeTop) top -= parseInt(this.nudgeTop)\n      if (this.nudgeBottom) top += parseInt(this.nudgeBottom)\n\n      return top\n    },\n    hasActivator (): boolean {\n      return !!this.$slots.activator || !!this.$scopedSlots.activator || !!this.activator || !!this.inputActivator\n    },\n    absoluteYOffset (): number {\n      return this.pageYOffset - this.relativeYOffset\n    },\n  },\n\n  watch: {\n    disabled (val) {\n      val && this.callDeactivate()\n    },\n    isActive (val) {\n      if (this.disabled) return\n\n      val ? this.callActivate() : this.callDeactivate()\n    },\n    positionX: 'updateDimensions',\n    positionY: 'updateDimensions',\n  },\n\n  beforeMount () {\n    this.hasWindow = typeof window !== 'undefined'\n\n    if (this.hasWindow) {\n      window.addEventListener('resize', this.updateDimensions, false)\n    }\n  },\n\n  beforeDestroy () {\n    if (this.hasWindow) {\n      window.removeEventListener('resize', this.updateDimensions, false)\n    }\n  },\n\n  methods: {\n    absolutePosition () {\n      return {\n        offsetTop: this.positionY || this.absoluteY,\n        offsetLeft: this.positionX || this.absoluteX,\n        scrollHeight: 0,\n        top: this.positionY || this.absoluteY,\n        bottom: this.positionY || this.absoluteY,\n        left: this.positionX || this.absoluteX,\n        right: this.positionX || this.absoluteX,\n        height: 0,\n        width: 0,\n      }\n    },\n    activate () {},\n    calcLeft (menuWidth: number) {\n      return convertToUnit(this.attach !== false\n        ? this.computedLeft\n        : this.calcXOverflow(this.computedLeft, menuWidth))\n    },\n    calcTop () {\n      return convertToUnit(this.attach !== false\n        ? this.computedTop\n        : this.calcYOverflow(this.computedTop))\n    },\n    calcXOverflow (left: number, menuWidth: number) {\n      const xOverflow = left + menuWidth - this.pageWidth + 12\n\n      if ((!this.left || this.right) && xOverflow > 0) {\n        left = Math.max(left - xOverflow, 0)\n      } else {\n        left = Math.max(left, 12)\n      }\n\n      return left + this.getOffsetLeft()\n    },\n    calcYOverflow (top: number) {\n      const documentHeight = this.getInnerHeight()\n      const toTop = this.absoluteYOffset + documentHeight\n      const activator = this.dimensions.activator\n      const contentHeight = this.dimensions.content.height\n      const totalHeight = top + contentHeight\n      const isOverflowing = toTop < totalHeight\n\n      // If overflowing bottom and offset\n      // TODO: set 'bottom' position instead of 'top'\n      if (isOverflowing &&\n        this.offsetOverflow &&\n        // If we don't have enough room to offset\n        // the overflow, don't offset\n        activator.top > contentHeight\n      ) {\n        top = this.pageYOffset + (activator.top - contentHeight)\n      // If overflowing bottom\n      } else if (isOverflowing && !this.allowOverflow) {\n        top = toTop - contentHeight - 12\n      // If overflowing top\n      } else if (top < this.absoluteYOffset && !this.allowOverflow) {\n        top = this.absoluteYOffset + 12\n      }\n\n      return top < 12 ? 12 : top\n    },\n    callActivate () {\n      if (!this.hasWindow) return\n\n      this.activate()\n    },\n    callDeactivate () {\n      this.isContentActive = false\n\n      this.deactivate()\n    },\n    checkForPageYOffset () {\n      if (this.hasWindow) {\n        this.pageYOffset = this.activatorFixed ? 0 : this.getOffsetTop()\n      }\n    },\n    checkActivatorFixed () {\n      if (this.attach !== false) return\n      let el = this.getActivator()\n      while (el) {\n        if (window.getComputedStyle(el).position === 'fixed') {\n          this.activatorFixed = true\n          return\n        }\n        el = el.offsetParent as HTMLElement\n      }\n      this.activatorFixed = false\n    },\n    deactivate () {},\n    genActivatorListeners () {\n      const listeners = Activatable.options.methods.genActivatorListeners.call(this)\n\n      const onClick = listeners.click\n\n      listeners.click = (e: MouseEvent & KeyboardEvent & FocusEvent) => {\n        if (this.openOnClick) {\n          onClick && onClick(e)\n        }\n\n        this.absoluteX = e.clientX\n        this.absoluteY = e.clientY\n      }\n\n      return listeners\n    },\n    getInnerHeight () {\n      if (!this.hasWindow) return 0\n\n      return window.innerHeight ||\n        document.documentElement.clientHeight\n    },\n    getOffsetLeft () {\n      if (!this.hasWindow) return 0\n\n      return window.pageXOffset ||\n        document.documentElement.scrollLeft\n    },\n    getOffsetTop () {\n      if (!this.hasWindow) return 0\n\n      return window.pageYOffset ||\n        document.documentElement.scrollTop\n    },\n    getRoundedBoundedClientRect (el: Element) {\n      const rect = el.getBoundingClientRect()\n      return {\n        top: Math.round(rect.top),\n        left: Math.round(rect.left),\n        bottom: Math.round(rect.bottom),\n        right: Math.round(rect.right),\n        width: Math.round(rect.width),\n        height: Math.round(rect.height),\n      }\n    },\n    measure (el: HTMLElement) {\n      if (!el || !this.hasWindow) return null\n\n      const rect = this.getRoundedBoundedClientRect(el)\n\n      // Account for activator margin\n      if (this.attach !== false) {\n        const style = window.getComputedStyle(el)\n\n        rect.left = parseInt(style.marginLeft!)\n        rect.top = parseInt(style.marginTop!)\n      }\n\n      return rect\n    },\n    sneakPeek (cb: () => void) {\n      requestAnimationFrame(() => {\n        const el = this.$refs.content\n\n        if (!el || el.style.display !== 'none') {\n          cb()\n          return\n        }\n\n        el.style.display = 'inline-block'\n        cb()\n        el.style.display = 'none'\n      })\n    },\n    startTransition () {\n      return new Promise<void>(resolve => requestAnimationFrame(() => {\n        this.isContentActive = this.hasJustFocused = this.isActive\n        resolve()\n      }))\n    },\n    updateDimensions () {\n      this.hasWindow = typeof window !== 'undefined'\n      this.checkActivatorFixed()\n      this.checkForPageYOffset()\n      this.pageWidth = document.documentElement.clientWidth\n\n      const dimensions: any = {\n        activator: { ...this.dimensions.activator },\n        content: { ...this.dimensions.content },\n      }\n\n      // Activator should already be shown\n      if (!this.hasActivator || this.absolute) {\n        dimensions.activator = this.absolutePosition()\n      } else {\n        const activator = this.getActivator()\n        if (!activator) return\n\n        dimensions.activator = this.measure(activator)\n        dimensions.activator.offsetLeft = activator.offsetLeft\n        if (this.attach !== false) {\n          // account for css padding causing things to not line up\n          // this is mostly for v-autocomplete, hopefully it won't break anything\n          dimensions.activator.offsetTop = activator.offsetTop\n        } else {\n          dimensions.activator.offsetTop = 0\n        }\n      }\n\n      // Display and hide to get dimensions\n      this.sneakPeek(() => {\n        if (this.$refs.content) {\n          if (this.$refs.content.offsetParent) {\n            const offsetRect = this.getRoundedBoundedClientRect(this.$refs.content.offsetParent)\n\n            this.relativeYOffset = window.pageYOffset + offsetRect.top\n            dimensions.activator.top -= this.relativeYOffset\n            dimensions.activator.left -= window.pageXOffset + offsetRect.left\n          }\n\n          dimensions.content = this.measure(this.$refs.content)\n        }\n\n        this.dimensions = dimensions\n      })\n    },\n  },\n})\n"],"sourceRoot":""}